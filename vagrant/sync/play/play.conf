include "application.conf"
pidfile.path = "/dev/null"

# Secret key
play.crypto.secret="zmNrwK]t7=Me^CB49Q46G:ZSan=:_XFB[>1X[<BBi@cIS^/BoIF;_P6AduN8h;r>"

# Sites sockets
# ~~~~~~~~~~~
websocketurls {
  homeUrl = "ws://192.168.33.11:9001/socket/"
  mapUrl = "ws://192.168.33.11:9002/socket/"
  adminUrl = "ws://192.168.33.11:9003/socket/"
  openUrl = "ws://192.168.33.11:9000/socket/"
}

kafka {
  msgtopic = "message" 
  msgpartition = 0 
  gridpartition = 0 
  gridtopic = "grid" 
}


# Spark
# ~~~~~ 
spark {
    master = "mesos://zk://192.168.33.11:2181/mesos"
    cassandra.connection.compression = "SNAPPY"
    cassandra.connection.host = "192.168.33.22"
    cassandra.auth.username = ""            
    cassandra.auth.password = ""
    executor.uri = "http://d3kbcqa49mib13.cloudfront.net/spark-1.6.0-bin-hadoop2.6.tgz"
    executor.home = "/etc/spark-1.6.0-bin-hadoop2.6"
    cores.max = 1
    driver.cores = 1
    executor.cores = 1
    mesos.coarse = true
    executor.memory = "128m"
    driver.memory = "128m"
    storage.memoryFraction = 0.6
    cassandra.input.split.size = 4
    serializer = "org.apache.spark.serializer.KryoSerializer"
    shuffle.manager = "SORT"
}

# Cassandra 
# ~~~~~ 
cassandra {
  userkeyspace = "usersdb"
  shopkeyspace = "shopsdb"
  port = 9042
  hosts = ["192.168.33.22"]
  numberOfContactPoints = 2
  httpServerBaseUri  = "http://1.2.3.4:18080/"
}

# Kafka
# ~~~~~~~~~~~

consumer {
    auto.commit.interval.ms = "1000"
    session.timeout.ms = "30000"
    bootstrap.servers = "192.168.33.22:31000"
    key.deserializer = "org.apache.kafka.common.serialization.ByteArrayDeserializer"
    value.deserializer = "org.apache.kafka.common.serialization.ByteArrayDeserializer"  
}

producer {
    bootstrap.servers = "192.168.33.22:31000"
    key.serializer = "org.apache.kafka.common.serialization.ByteArraySerializer"
    value.serializer = "org.apache.kafka.common.serialization.ByteArraySerializer"
    acks = -1
    retries = 3
    batch.size = 1
    linger.ms = 1
    buffer.memory = 33554432
}

# Akka Actors
# ~~~~~~~~~~~
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel="DEBUG"
}

cassandraactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
}

sparkactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
}

processactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
}

communicateactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 5000
    interval = 5000
  }
}

kafkaproduceractor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 5000
    interval = 5000
  }
}

kafkaconsumeractor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 5000
    interval = 5000
  }
}

cassandraactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
}

persistmessageactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
}

persistclickactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
}

shopsregionsactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  scheduler{
    initialDelay = 60000
    interval = 3600000
  }
}
evolutionsactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
}
# Email to Admin
# ~~~~~~~~~~~
email {
  to = "@gmail.com"
  from = "@gmail.com"
  username = "@gmail.com"
  password = ""
  host = "" #smtp.gmail.com
  port = 465
  ttls = "true"
  auth = "true"
}


##Map Settings
# ~~~~~
# 14 means 2 ^^ 14 regions, ie 16 million
reactiveMaps {
  maxZoomDepth=14
  maxSubscriptionRegions=6
  summaryInterval=5s
  expiryInterval=30s
  subscriberBatchInterval=2s
  shopsPositionUpdateInterval=43200s
  shopsPositionStart=432s
  clusterThreshold=0
  clusterDimension=10
}

# Silhouette Authentication
# ~~~~~~~~~~~
jwtAuthenticator {
  headerName = "X-Auth-Token"
  issuerClaim = "play-angular-silhouette"
  encryptSubject = false
  authenticatorIdleTimeout = 31536000 # One year in seconds
  authenticatorExpiry = 31536000 # One year in seconds
  sharedSecret = "changeme"
}

silhouette {
  # Authenticator settings
  authenticator.cookieDomain="play-silhouette-seed.herokuapp.com"
  authenticator.cookieName="authenticator"
  authenticator.cookiePath="/"
  authenticator.secureCookie=true // Disable for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie=true
  authenticator.useFingerprinting=true
  authenticator.authenticatorIdleTimeout=30 minutes
  authenticator.authenticatorExpiry=12 hours
  authenticator.rememberMe.cookieMaxAge=30 days
  authenticator.rememberMe.authenticatorIdleTimeout=5 days
  authenticator.rememberMe.authenticatorExpiry=30 days

  # OAuth1 token secret provider settings
  oauth1TokenSecretProvider.cookieDomain="play-silhouette-seed.herokuapp.com"
  oauth1TokenSecretProvider.cookieName="OAuth1TokenSecret"
  oauth1TokenSecretProvider.cookiePath="/"
  oauth1TokenSecretProvider.secureCookie=true // Disable for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth1TokenSecretProvider.httpOnlyCookie=true
  oauth1TokenSecretProvider.expirationTime=5 minutes

  # OAuth2 state provider settings
  oauth2StateProvider.cookieDomain="play-silhouette-seed.herokuapp.com"
  oauth2StateProvider.cookieName="OAuth2State"
  oauth2StateProvider.cookiePath="/"
  oauth2StateProvider.secureCookie=true // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth2StateProvider.httpOnlyCookie=true
  oauth2StateProvider.expirationTime=5 minutes

  # Facebook provider
  facebook.redirectURL="https://play-silhouette-seed.herokuapp.com/authenticate/facebook"
  facebook.authorizationURL="https://graph.facebook.com/v2.3/oauth/authorize"
  facebook.accessTokenURL="https://graph.facebook.com/v2.3/oauth/access_token"
  facebook.clientID=""
  facebook.clientID=${?FACEBOOK_CLIENT_ID}
  facebook.clientSecret=""
  facebook.clientSecret=${?FACEBOOK_CLIENT_SECRET}
  facebook.scope="email"

  # Google provider
  google.redirectURL="https://play-silhouette-seed.herokuapp.com/authenticate/google"
  google.authorizationURL="https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL="https://accounts.google.com/o/oauth2/token"
  google.clientID="615332582248-0eqj7uljd605iqbsjl2v0pb8ov3c9k59.apps.googleusercontent.com"
  google.clientID=${?GOOGLE_CLIENT_ID}
  google.clientSecret="fSbM0HPY1j8YiMCiXRrA5b0m"
  google.clientSecret=${?GOOGLE_CLIENT_SECRET}
  google.scope="profile email"


  # VK provider
  vk.redirectURL="https://play-silhouette-seed.herokuapp.com/authenticate/vk"
  vk.authorizationURL="http://oauth.vk.com/authorize"
  vk.accessTokenURL="https://oauth.vk.com/access_token"
  vk.clientID=""
  vk.clientID=${?VK_CLIENT_ID}
  vk.clientSecret=""
  vk.clientSecret=${?VK_CLIENT_SECRET}
  vk.scope="email"

  # Clef provider
  clef.redirectURL="https://play-silhouette-seed.herokuapp.com/authenticate/clef"
  clef.accessTokenURL="https://clef.io/api/v1/authorize"
  clef.clientID=""
  clef.clientID=${?CLEF_CLIENT_ID}
  clef.clientSecret=""
  clef.clientSecret=${?CLEF_CLIENT_SECRET}

  # Twitter provider
  twitter.callbackURL="https://play-silhouette-seed.herokuapp.com/authenticate/twitter"
  twitter.requestTokenURL="https://twitter.com/oauth/request_token"
  twitter.accessTokenURL="https://twitter.com/oauth/access_token"
  twitter.authorizationURL="https://twitter.com/oauth/authenticate"
  twitter.consumerKey=""
  twitter.consumerKey=${?TWITTER_CONSUMER_KEY}
  twitter.consumerSecret=""
  twitter.consumerSecret=${?TWITTER_CONSUMER_SECRET}

  # Xing provider
  xing.callbackURL="https://play-silhouette-seed.herokuapp.com/authenticate/xing"
  xing.requestTokenURL="https://api.xing.com/v1/request_token"
  xing.accessTokenURL="https://api.xing.com/v1/access_token"
  xing.authorizationURL="https://api.xing.com/v1/authorize"
  xing.consumerKey=""
  xing.consumerKey=${?XING_CONSUMER_KEY}
  xing.consumerSecret=""
  xing.consumerSecret=${?XING_CONSUMER_SECRET}

  # Yahoo provider
  yahoo.callbackURL="https://play-silhouette-seed.herokuapp.com/authenticate/yahoo"
  yahoo.realm="https://play-silhouette-seed.herokuapp.com"
  yahoo.providerURL="https://me.yahoo.com/"
  yahoo.axRequired={
    "fullname": "http://axschema.org/namePerson",
    "email": "http://axschema.org/contact/email",
    "image": "http://axschema.org/media/image/default"
  }
  yahoo.realm="http://localhost:9000"
}








